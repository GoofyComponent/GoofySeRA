version: "3"
services:
  laravel.test:
    container_name: develop-sera-back-laravel-test
    volumes:
      - ./sera-back:/var/www/html
    build: 
      context: ./sera-back
      dockerfile: ./docker/prod.Dockerfile
      args:
        WWWGROUP: "${WWWGROUP:-1000}"
    user: "${WWWUSER:-1000}:${WWWGROUP:-1000}"
    networks:
      - sail
      - monolith
      - hosted
    depends_on:
      - mariadb
      - redis
      - soketi

  mariadb:
    container_name: develop-sera-back-mariadb
    image: "mariadb:10"
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - "sail-mariadb:/var/lib/mysql"
      - "./sera-back/vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - "-p${DB_PASSWORD}"
      retries: 3
      timeout: 5s
  redis:
    container_name: develop-sera-back-redis
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "sail-redis:/data"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s
  soketi:
    container_name: develop-sera-back-soketi
    image: "quay.io/soketi/soketi:latest-16-alpine"
    environment:
      SOKETI_DEBUG: "${SOKETI_DEBUG:-1}"
      SOKETI_METRICS_SERVER_PORT: "9601"
      SOKETI_DEFAULT_APP_ID: "${PUSHER_APP_ID}"
      SOKETI_DEFAULT_APP_KEY: "${PUSHER_APP_KEY}"
      SOKETI_DEFAULT_APP_SECRET: "${PUSHER_APP_SECRET}"
    ports:
      - "${PUSHER_PORT:-6001}:6001"
      - "${PUSHER_METRICS_PORT:-9601}:9601"
    networks:
      - sail
      - monolith
  nextjs:
    container_name: develop-sera-front
    build:
      context: ./sera-front
      dockerfile: prod.Dockerfile
      target: runner
      args:
        - port=${PORT_FRONT:-80}
        - ENV_VARIABLE=${ENV_VARIABLE:-production_server_only_variable}
    networks:
      - monolith
      - hosted
    #ports:
    #- "${PORT_FRONT:-3305}:3000"

networks:
  sail:
    driver: bridge
  monolith:
    driver: bridge
  hosted:
    external: true
volumes:
  sail-mariadb:
    driver: local
  sail-redis:
    driver: local
 
