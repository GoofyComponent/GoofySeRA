version: "3"
services:
  laravel.test:
    container_name: sera-back-laravel-test
    build:
      context: ./sera-back/vendor/laravel/sail/runtimes/8.2
      dockerfile: Dockerfile
      args:
        WWWGROUP: "${WWWGROUP}"
    image: sail-8.2/app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${APP_PORT:-80}:80"
      - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
    environment:
      WWWUSER: "${WWWUSER}"
      LARAVEL_SAIL: 1
      XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
      XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
      IGNITION_LOCAL_SITES_PATH: "${PWD}"
    volumes:
      - "./sera-back:/var/www/html"
    networks:
      - sail
      - monolith
    depends_on:
      - mariadb
      - redis
      - soketi
      - minio
  mariadb:
    container_name: sera-back-mariadb
    image: "mariadb:10"
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - "sail-mariadb:/var/lib/mysql"
      - "./sera-back/vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - "-p${DB_PASSWORD}"
      retries: 3
      timeout: 5s
  redis:
    container_name: sera-back-redis
    image: "redis:alpine"
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "sail-redis:/data"
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s
  soketi:
    container_name: sera-back-soketi
    image: "quay.io/soketi/soketi:latest-16-alpine"
    environment:
      SOKETI_DEBUG: "${SOKETI_DEBUG:-1}"
      SOKETI_METRICS_SERVER_PORT: "9601"
      SOKETI_DEFAULT_APP_ID: "${PUSHER_APP_ID}"
      SOKETI_DEFAULT_APP_KEY: "${PUSHER_APP_KEY}"
      SOKETI_DEFAULT_APP_SECRET: "${PUSHER_APP_SECRET}"
    ports:
      - "${PUSHER_PORT:-6001}:6001"
      - "${PUSHER_METRICS_PORT:-9601}:9601"
    networks:
      - sail
      - monolith
  nextjs:
    container_name: sera-front-nextjs
    build:
      context: ./sera-front
      dockerfile: prod.Dockerfile
      target: runner
      args:
        - port=${PORT_FRONT:-3305}
        - ENV_VARIABLE=${ENV_VARIABLE:-production_server_only_variable}
    #volumes:
    #- sera-front:/app
    networks:
      - monolith
    #command: npm run dev
    ports:
      - "${PORT_FRONT:-3305}:80"
    #environment:
    #NODE_ENV: development
  minio:
    container_name: sera-minio
    image: docker.io/bitnami/minio:2023
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    volumes:
      - 'minio_data:/data'
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - monolith
      - sail

networks:
  sail:
    driver: bridge
  monolith:
    driver: bridge
volumes:
  sail-mariadb:
    driver: local
  sail-redis:
    driver: local
  sera-front:
    driver: local
  minio_data:
    driver: local

