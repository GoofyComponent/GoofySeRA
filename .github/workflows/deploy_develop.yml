name: Deploy develop branch

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Check if the previous containers exists
        run: |
          if [ "$(docker ps -a -q --filter "name=sera" | wc -l)" -gt 0 ]
          then
              echo "Previous containers found, stopping and removing them..."
          else
              echo "No previous containers found, continuing..."
          fi

      - name: Stop the previous containers
        run: |
          if [ "$(docker ps -a -q --filter "name=sera" | wc -l)" -gt 0 ]
          then
              docker stop $(docker ps -a -q --filter "name=sera")
          fi

      - name: Remove the previous containers
        run: |
          if [ "$(docker ps -a -q --filter "name=sera" | wc -l)" -gt 0 ]
          then
              docker rm $(docker ps -a -q --filter "name=sera")
          fi

      - name: Display current directory
        run: |
          pwd
          ls -la

      - name: Deletes the files inside the current directory
        run: |
          rm -rf ./*

      - name: Writes the .env file
        run: |
          echo "${{ secrets.DEVELOP_ROOT_ENV_FILE }}" > .env
          echo "${{ secrets.DEVELOP_LARAVEL_ENV_FILE }}" > sera-back/.env

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          clean: false
          ref: develop

      - name: Copy .env file if not exists
        run: |
          if [ ! -f ./.env ]
          then
              echo ".env file not found"
              cp .env.example .env
              cp sera-back/.env.example sera-back/.env
              chmod 755 sera-back/.env
              chmod 755 .env
              echo "Copying from .env.example, waiting for 5 seconds..."
              sleep 5
              if [ ! -f ./.env ]
              then
                  echo "copying .env failed, please copy .env.example to .env manually"
                  exit ;
              fi
          fi

      - name: Check if Docker is installed
        run: |
          if ! command -v docker &> /dev/null; then
            echo "Docker is not installed. Please make sure Docker is installed on the system."
            exit 1
          fi

      - name: DEBUG - Displaying the current directory && path
        run: |
          pwd
          ls -la
          find . -name composer.json
          ls -la sera-back
          ls -la sera-front

      - name: Execute composer install
        run: |
          docker run --rm \
          -u "$(id -u):$(id -g)" \
          -v $(pwd)/sera-back:/opt \
          -w /opt \
          laravelsail/php81-composer \
          composer install --ignore-platform-reqs

      - name: Check if sail folder exists
        run: |
          if [ ! -d ./sera-back/vendor/laravel/sail ]
          then
              echo "sail folder not found, exiting..."
              exit ;
          fi

      - name: Launch the containers
        run: |
          ./sera-back/vendor/laravel/sail/bin/sail -f ./develop.docker-compose.yml up -d --build --force-recreate

      - name: Wait till all containers has started
        run: |
          sleep 2m

      - name: Migrate the database
        run: |
          if [ "${1}" = "reset" ]
          then
              ./sera-back/vendor/laravel/sail/bin/sail artisan migrate:refresh --seed
          else
              ./sera-back/vendor/laravel/sail/bin/sail artisan migrate
          fi

      - name: Displaying that it's done
        run: |
          echo "Done"
