name: Install/Update Sera

on:
  workflow_call:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: prod
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set env vars
        run: |
          echo "${{ secrets.PROD_ENV_FILE }}" >> .env

      - name: Pull new images
        run: |
          docker-compose -f ./prod.docker-compose.yml -p "prod-sera" pull
             
      - name: Update the prod
        run: |
          docker-compose -f ./prod.docker-compose.yml -p "prod-sera" up -d

      - name: Remove unused images
        run: |
          docker image prune -f
          
      - name: Wait till the stack is created
        run: |
          sleep 2

      - name: Writes the .env file
        run: |
          docker exec sera-server sh -c 'echo "${{ secrets.PROD_ENV_FILE }}" > .env'

      - name: DEBUG LS REPO
        run: |
          ls -la
          docker exec sera-server ls -la

      - name: Execute laravel configs
        run: |
          docker exec sera-server php artisan cache:clear 
          docker exec sera-server php artisan route:clear
          docker exec sera-server php artisan key:generate
          docker exec sera-server php artisan config:cache
          docker exec sera-server php artisan route:cache
          docker exec sera-server php artisan view:cache
          docker exec sera-server php artisan optimize
          docker exec sera-server php artisan storage:link
          docker exec sera-server chown -R www-data:www-data /root
          docker exec sera-server php artisan migrate --force
          docker exec sera-server php artisan config:cache
          docker exec sera-server php artisan config:clear
          docker exec sera-server php artisan db:seed --class=UserProdSeeder --force
